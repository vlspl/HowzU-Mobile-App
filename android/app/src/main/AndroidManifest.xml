<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.howzu"
	android:versionCode="36" android:versionName="2.1.5">

	<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="31" />

	<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />

	<queries>
		<intent>
			<action android:name="android.speech.RecognitionService" />
		</intent>
		<intent>
			<action android:name="android.media.action.IMAGE_CAPTURE" />
		</intent>
	</queries>

	<uses-permission android:name="android.permission.INTERNET" />
	<uses-permission android:name="android.permission.VIBRATE" />
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
	<uses-permission android:name="android.permission.WAKE_LOCK" />
	<uses-permission android:name="android.permission.CAMERA" />
	<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" />
	<uses-permission android:name="android.permission.ACCESS_DOWNLOAD_MANAGER" />
	<uses-permission android:name="android.permission.RECORD_AUDIO" />
	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<uses-permission android:name="android.permission.WRITE_CALENDAR" />
	<uses-permission android:name="android.permission.READ_CALENDAR" />

	<uses-feature android:name="android.hardware.camera" android:required="false" />
	<uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
	<!-- Required to access Google Play Licensing -->
	<uses-permission android:name="com.android.vending.CHECK_LICENSE" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
	<!-- Required by older versions of Google Play services to create IID tokens -->
	<uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
	<uses-permission
		android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" />
	<!-- for android -->
	<!-- <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/> -->
	<!-- <uses-permission android:name="com.android.launcher.permission.WRITE_SETTINGS"/> -->
	<!-- <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" /> -->
	<!-- <uses-permission android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT" /> -->
	<!-- for Samsung -->
	<uses-permission android:name="com.sec.android.provider.badge.permission.READ" />
	<uses-permission android:name="com.sec.android.provider.badge.permission.WRITE" />
	<!-- for htc -->
	<uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS" />
	<uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT" />
	<!-- for sony -->
	<uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE" />
	<uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" />
	<!-- for apex -->
	<uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT" />
	<!-- for solid -->
	<uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE" />
	<!-- for huawei -->
	<uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
	<uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS" />
	<uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS" />
	<!-- for ZUK -->
	<uses-permission android:name="android.permission.READ_APP_BADGE" />
	<!-- for OPPO -->
	<uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS" />
	<uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS" />
	<!-- for EvMe -->
	<uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ" />
	<uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE" />
	<uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />

	<application android:name="com.howzu.MainApplication" android:allowBackup="false"
		android:appComponentFactory="androidx.core.app.CoreComponentFactory"
		android:icon="@mipmap/ic_launcher"
		android:installLocation="preferExternal" android:label="@string/app_name"
		android:requestLegacyExternalStorage="true" android:roundIcon="@mipmap/ic_launcher_round"
		android:theme="@style/AppTheme" android:usesCleartextTraffic="true">
		<meta-data android:name="com.dieam.reactnativepushnotification.notification_foreground"
			android:value="false" />
		<!-- Change the resource name to your App's accent color - or any other color you want -->
		<meta-data android:name="com.dieam.reactnativepushnotification.notification_color"
			android:resource="@color/white" />
		<!-- or @android:color/{name} to use a standard color -->
		<!-- <meta-data android:name="com.google.firebase.messaging.default_notification_color"
		android:resource="@color/white" tools:replace="android:resource" /> -->
		<meta-data android:name="com.dieam.reactnativepushnotification.notification_channel_name"
			android:value="sound-channel-id" />
		<meta-data android:name="com.google.firebase.messaging.default_notification_icon"
			android:resource="@mipmap/ic_launcher_round" />

		<receiver android:exported="true"
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationActions" />
		<receiver android:exported="true"
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher" />
		<receiver android:exported="true"
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.QUICKBOOT_POWERON" />
				<action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
			</intent-filter>
		</receiver>

		<service
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService"
			android:exported="false">
			<intent-filter>
				<action android:name="com.google.firebase.MESSAGING_EVENT" />
			</intent-filter>
		</service>
		<service android:name="io.invertase.firebase.messaging.RNFirebaseBackgroundMessagingService" />

		<activity android:exported="true" android:name="com.howzu.MainActivity"
			android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
			android:label="@string/app_name" android:launchMode="singleTask"
			android:screenOrientation="portrait" android:windowSoftInputMode="adjustPan">
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />

				<category android:name="android.intent.category.LAUNCHER" />

				<action android:name="android.intent.action.DOWNLOAD_COMPLETE" />
			</intent-filter>
			<intent-filter android:autoVerify="true">
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.BROWSABLE" />

				<data android:scheme="http" />
				<data android:scheme="https" />
				<data android:host="vlshowzuapp.com" />
			</intent-filter>
		</activity>
		<activity android:name="com.facebook.react.devsupport.DevSettingsActivity"
			android:exported="false" />

		<!-- <provider android:name="io.invertase.notifee.NotifeeInitProvider"
			android:authorities="com.howzu.notifee-init-provider" android:exported="false"
			android:initOrder="-100" /> -->

		<meta-data android:name="firebase_analytics_collection_enabled" android:value="true" />

		<service
			android:name="io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService"
			android:exported="false" />
		<service android:name="io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService"
			android:exported="false">
			<intent-filter>
				<action android:name="com.google.firebase.MESSAGING_EVENT" />
			</intent-filter>
		</service>

		<receiver
			android:name="io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver"
			android:exported="true" android:permission="com.google.android.c2dm.permission.SEND">
			<intent-filter>
				<action android:name="com.google.android.c2dm.intent.RECEIVE" />
			</intent-filter>
		</receiver>

		<meta-data android:name="firebase_messaging_auto_init_enabled" android:value="true" />
		<meta-data android:name="com.google.firebase.messaging.default_notification_channel_id"
			android:value="" />
		<meta-data android:name="com.google.firebase.messaging.default_notification_color"
			android:resource="@color/white" />

		<provider android:name="androidx.core.content.FileProvider"
			android:authorities="com.howzu.provider" android:exported="false"
			android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/provider_paths" />
		</provider>

		<activity android:name="com.yalantis.ucrop.UCropActivity"
			android:theme="@style/Theme.AppCompat.Light.NoActionBar" android:exported="false" />

		<provider android:name="com.imagepicker.ImagePickerProvider"
			android:authorities="com.howzu.imagepickerprovider" android:exported="false"
			android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/imagepicker_provider_paths" />
		</provider>
		<provider android:name="cl.json.RNShareFileProvider"
			android:authorities="com.howzu.rnshare.fileprovider" android:exported="false"
			android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/share_download_paths" />
		</provider>
		<provider android:name="com.reactnativecommunity.webview.RNCWebViewFileProvider"
			android:authorities="com.howzu.fileprovider" android:exported="false"
			android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/file_provider_paths" />
		</provider>
		<provider android:name="com.RNFetchBlob.Utils.FileProvider"
			android:authorities="com.howzu.provider" android:exported="false"
			android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS"
				android:resource="@xml/provider_paths" />
		</provider>
		<provider android:name="androidx.work.impl.WorkManagerInitializer"
			android:authorities="com.howzu.workmanager-init" android:directBootAware="false"
			android:exported="false" android:multiprocess="true" />

		<service android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"
			android:directBootAware="false"
			android:enabled="@bool/enable_system_alarm_service_default" android:exported="false" />
		<service android:name="androidx.work.impl.background.systemjob.SystemJobService"
			android:directBootAware="false"
			android:enabled="@bool/enable_system_job_service_default" android:exported="true"
			android:permission="android.permission.BIND_JOB_SERVICE" />
		<service android:name="androidx.work.impl.foreground.SystemForegroundService"
			android:directBootAware="false"
			android:enabled="@bool/enable_system_foreground_service_default"
			android:exported="false" />

		<receiver android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"
			android:directBootAware="false" android:enabled="true" android:exported="false" />
		<receiver
			android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"
			android:directBootAware="false" android:enabled="false" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
				<action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
			</intent-filter>
		</receiver>
		<receiver
			android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"
			android:directBootAware="false" android:enabled="false" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.BATTERY_OKAY" />
				<action android:name="android.intent.action.BATTERY_LOW" />
			</intent-filter>
		</receiver>
		<receiver
			android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"
			android:directBootAware="false" android:enabled="false" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
				<action android:name="android.intent.action.DEVICE_STORAGE_OK" />
			</intent-filter>
		</receiver>
		<receiver
			android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"
			android:directBootAware="false" android:enabled="false" android:exported="false">
			<intent-filter>
				<action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
			</intent-filter>
		</receiver>
		<receiver android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"
			android:directBootAware="false" android:enabled="false" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.TIME_SET" />
				<action android:name="android.intent.action.TIMEZONE_CHANGED" />
			</intent-filter>
		</receiver>
		<receiver
			android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"
			android:directBootAware="false"
			android:enabled="@bool/enable_system_alarm_service_default" android:exported="false">
			<intent-filter>
				<action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />
			</intent-filter>
		</receiver>
		<receiver android:name="androidx.work.impl.diagnostics.DiagnosticsReceiver"
			android:directBootAware="false" android:enabled="true" android:exported="true"
			android:permission="android.permission.DUMP">
			<intent-filter>
				<action android:name="androidx.work.diagnostics.REQUEST_DIAGNOSTICS" />
			</intent-filter>
		</receiver>

		<service android:name="androidx.room.MultiInstanceInvalidationService"
			android:directBootAware="true" android:exported="false" />
		<service android:name="com.google.mlkit.common.internal.MlKitComponentDiscoveryService"
			android:directBootAware="true" android:exported="false">
			<meta-data
				android:name="com.google.firebase.components:com.google.mlkit.vision.barcode.internal.BarcodeRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.mlkit.vision.face.internal.FaceRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.mlkit.vision.text.internal.TextRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.mlkit.vision.common.internal.VisionCommonRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.mlkit.common.internal.CommonComponentRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
		</service>

		<receiver android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
			android:exported="true" android:permission="com.google.android.c2dm.permission.SEND">
			<intent-filter>
				<action android:name="com.google.android.c2dm.intent.RECEIVE" />
			</intent-filter>
		</receiver>
		<!--
             FirebaseMessagingService performs security checks at runtime,
             but
		set to not exported to explicitly avoid allowing another app to call it.
        -->
		<service android:name="com.google.firebase.messaging.FirebaseMessagingService"
			android:directBootAware="true" android:exported="false">
			<intent-filter android:priority="-500">
				<action android:name="com.google.firebase.MESSAGING_EVENT" />
			</intent-filter>
		</service>
		<service android:name="com.google.firebase.components.ComponentDiscoveryService"
			android:directBootAware="true" android:exported="false">
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.messaging.FirebaseMessagingRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
			<!--
                This registrar is not defined in the dynamic-module-support sdk
			itself to allow non-firebase
                clients to use it as well, by defining
			this registrar in their own core/common library.
            -->
			<meta-data
				android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"
				android:value="com.google.firebase.components.ComponentRegistrar" />
		</service>

		<activity android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
			android:excludeFromRecents="true" android:exported="false"
			android:theme="@android:style/Theme.Translucent.NoTitleBar" />
		<!--
            Service handling Google Sign-In user revocation. For apps that do not
		integrate with
            Google Sign-In, this service will never be started.
        -->
		<service android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
			android:exported="true"
			android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION"
			android:visibleToInstantApps="true" />

		<activity android:name="com.google.firebase.auth.internal.GenericIdpActivity"
			android:excludeFromRecents="true" android:exported="true"
			android:launchMode="singleTask"
			android:theme="@android:style/Theme.Translucent.NoTitleBar">
			<intent-filter>
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.BROWSABLE" />

				<data android:host="firebase.auth" android:path="/" android:scheme="genericidp" />
			</intent-filter>
		</activity>
		<activity android:name="com.google.firebase.auth.internal.RecaptchaActivity"
			android:excludeFromRecents="true" android:exported="true"
			android:launchMode="singleTask"
			android:theme="@android:style/Theme.Translucent.NoTitleBar">
			<intent-filter>
				<action android:name="android.intent.action.VIEW" />

				<category android:name="android.intent.category.DEFAULT" />
				<category android:name="android.intent.category.BROWSABLE" />

				<data android:host="firebase.auth" android:path="/" android:scheme="recaptcha" />
			</intent-filter>
		</activity>

		<service
			android:name="com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService"
			android:enabled="true" android:exported="false">
			<intent-filter>
				<action android:name="com.google.firebase.auth.api.gms.service.START" />

				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</service>

		<provider android:name="com.google.mlkit.common.internal.MlKitInitProvider"
			android:authorities="com.howzu.mlkitinitprovider" android:exported="false"
			android:initOrder="99" />

		<activity android:name="com.google.android.gms.common.api.GoogleApiActivity"
			android:exported="false" android:theme="@android:style/Theme.Translucent.NoTitleBar" />

		<provider android:name="com.google.firebase.provider.FirebaseInitProvider"
			android:authorities="com.howzu.firebaseinitprovider" android:directBootAware="true"
			android:exported="false" android:initOrder="100" />

		<receiver android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
			android:enabled="true" android:exported="false">
		</receiver>

		<service android:name="com.google.android.gms.measurement.AppMeasurementService"
			android:enabled="true" android:exported="false" />
		<service android:name="com.google.android.gms.measurement.AppMeasurementJobService"
			android:enabled="true" android:exported="false"
			android:permission="android.permission.BIND_JOB_SERVICE" />

		<meta-data android:name="com.google.android.gms.version"
			android:value="@integer/google_play_services_version" />

		<service
			android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery"
			android:exported="false">
			<meta-data android:name="backend:com.google.android.datatransport.cct.CctBackendFactory"
				android:value="cct" />
		</service>
		<service
			android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService"
			android:exported="false" android:permission="android.permission.BIND_JOB_SERVICE">
		</service>

		<receiver
			android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver"
			android:exported="false" />
		<!-- Receiver Service -->
		<!-- <service android:name="app.notifee.core.ReceiverService" android:exported="false" /> -->
		<!-- Foreground Service -->
		<!-- <service android:name="app.notifee.core.ForegroundService" android:exported="false" /> -->

		<!-- <receiver android:name="app.notifee.core.RebootBroadcastReceiver" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.QUICKBOOT_POWERON" />
				<action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
			</intent-filter>
		</receiver> -->
		<!-- <receiver android:name="app.notifee.core.NotificationAlarmReceiver" android:exported="false">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.intent.action.QUICKBOOT_POWERON" />
				<action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
			</intent-filter>
		</receiver>		 -->
		<!--
		Broadcast Receiver -->
		<!-- <receiver android:name="app.notifee.core.BlockStateBroadcastReceiver"
			android:exported="false">
			<intent-filter>
				<action android:name="android.app.action.APP_BLOCK_STATE_CHANGED" />
				<action android:name="android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED" />
				<action
					android:name="android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED" />
			</intent-filter>
		</receiver> -->
	</application>

</manifest>